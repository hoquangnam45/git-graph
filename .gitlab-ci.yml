image: maven:3-jdk-11

# Run this only on default branch when tag is specified
workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

cache:
  key: "dependencies"
  paths:
    - .m2/repository/

prepare-job:
  stage: .pre
  script:
    - echo "TAG=0.0.1-SNAPSHOT" >> variables.env
    - echo "ARTIFACT_ID=ReleaseBuilder" >> variables.env
    - echo "PROJECT_ID=323" >> variables.env
    - echo "GITLAB_URL=https://gitlab.tx-tech.com" >> variables.env
    - echo "REPOSITORY_ID=gitlab-maven" >> variables.env
    - echo "GROUP_ID=com.ttl.internal.vn.tool" >> variables.env
    - echo "PACKAGE_REGISTRY_URL=https://gitlab.tx-tech.com/api/v4/projects/323/packages/generic/ReleaseBuilder/0.0.1-SNAPSHOT" >> variables.env
  artifacts:
    reports:
      dotenv: variables.env                                   # Use artifacts:reports:dotenv to expose the variables to other jobs

build-job:
  stage: build
  dependencies:
    - prepare-job
  script:
    - echo "Building build tool..."
    - mvn clean package $MAVEN_OPTS -DskipTests
  artifacts:
    paths:
      - target/

deploy-job:
  stage: deploy
  dependencies:
    - prepare-job
    - build-job
  script:
    - echo "Deploying build tool..."
    - echo $CI_JOB_TOKEN
    - 'echo "Download artifacts url: ${PACKAGE_REGISTRY_URL}/ReleaseBuilder-${TAG}.jar"'
    - echo "ARTIFACT_DEPLOYMENT_URL=${PACKAGE_REGISTRY_URL}/ReleaseBuilder-${TAG}.jar" >> variables.env
    - 'curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file target/$ARTIFACT_ID-$TAG-jar-with-dependencies.jar ${PACKAGE_REGISTRY_URL}/ReleaseBuilder-${TAG}.jar'
  artifacts:
    reports:
      dotenv: variables.env

release-job:
  stage: .post
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  dependencies:
    - prepare-job
    - deploy-job
  script:
    - echo "Create release..."
  release:
    name: 'Release $TAG'
    description: '$TAG'
    tag_name: '$TAG'                                                 # variables must be defined elsewhere
    ref: '$CI_COMMIT_SHA'                                            # in the pipeline. For example, in the
    assets:
      links:
        - name: '$ARTIFACT_ID-$TAG'
          url: $ARTIFACT_DEPLOYMENT_URL